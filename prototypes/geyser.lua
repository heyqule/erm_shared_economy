---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 3/24/2025 7:30 PM
---
local resource_autoplace = require("resource-autoplace")
local space_age_item_sounds = require("__space-age__.prototypes.item_sounds")
local item_sounds = require("__base__.prototypes.item_sounds")
local base_tile_sounds = require("__base__/prototypes/tile/tile-sounds")
local simulations = require("__space-age__.prototypes.factoriopedia-simulations")

local Geyser = {}

function Geyser.add_resource(options)
    local type = options.type or 'terran'
    local geyser_type = "erm-geyser-"..type
    local name = options.name
    local global_shift = 30
    data.extend({
        {
            type = "item-subgroup",
            name = "erm-geyser-processes",
            group = "intermediate-products",
            order = "j"
        },
        {
            type = "resource-category",
            name = geyser_type
        },
        {
            type = "autoplace-control",
            name = name,
            localised_name = {"", "[entity="..name.."]", {"entity-name."..name}},
            richness = true,
            order = 'm'..name,
            category = "resource"
        },
        {
            type = "resource",
            name = name,
            icon = "__erm_shared_economy__/graphics/geyser/"..type.."-icon.png",
            flags = {"placeable-neutral"},
            --factoriopedia_simulation = simulations.factoriopedia_uranium_ore,
            order = "a-b-"..options.order,
            category = geyser_type,
            infinite = true,
            highlight = true,
            minimum = 75000,
            normal = 500000,
            infinite_depletion_amount = 10,
            resource_patch_search_radius = 12,
            tree_removal_probability = 0.8,
            tree_removal_max_distance = 32 * 32,
            walking_sound = base_tile_sounds.walking.ore,
            driving_sound = base_tile_sounds.driving.stone,
            draw_stateless_visualisation_under_building = false,
            minable =
            {
                mining_time = options.mining_time,
                result = name,
            },
            collision_box = {{-3, -3}, {3, 3}},
            selection_box = {{-3, -3}, {3, 3}},
            map_generator_bounding_box = {{-4, -4}, {4, 4}},
            autoplace = resource_autoplace.resource_autoplace_settings
            {
                name = name,
                order = options.order,
                base_density = options.base_density,
                base_spots_per_km = options.base_spots_per_km2,
                has_starting_area_placement = options.has_starting_area_placement,
                regular_rq_factor_multiplier = options.regular_rq_factor_multiplier,
                starting_rq_factor_multiplier = options.starting_rq_factor_multiplier,
                candidate_spot_count = options.candidate_spot_count,
                tile_restriction = options.tile_restriction,
                random_probability = options.random_probability,
                random_spot_size_minimum = options.random_spot_size_minimum,
                random_spot_size_maximum = options.random_spot_size_maximum,
                additional_richness = options.additional_richness or 100000
            },
            stage_counts = {0},
            stages =
            {
                sheet =
                {
                    filename = "__erm_shared_economy__/graphics/geyser/stages.png",
                    priority = "extra-high",
                    width = 512,
                    height = 270,
                    frame_count = 3,
                    variation_count = 1,
                    scale = 0.5,
                    shift = util.by_pixel(0, global_shift),
                }
            },
            stateless_visualisation =
            {
                {
                    count = 1,
                    render_layer = "smoke",
                    animation = {
                        filename = "__base__/graphics/entity/crude-oil/oil-smoke-outer.png",
                        frame_count = 47,
                        line_length = 16,
                        width = 90,
                        height = 188,
                        animation_speed = 0.3,
                        shift = util.by_pixel(-62, 20-152+global_shift),
                        scale = 1.0,
                        tint = util.multiply_color(options.smoke_color_1_outer, options.smoke_color_1_outer_strength)
                    }
                },
                {
                    count = 1,
                    render_layer = "smoke",
                    animation = {
                        filename = "__base__/graphics/entity/crude-oil/oil-smoke-inner.png",
                        frame_count = 47,
                        line_length = 16,
                        width = 40,
                        height = 84,
                        animation_speed = 0.3,
                        shift = util.by_pixel(-60, 20 -78+global_shift),
                        scale = 1.0,
                        tint = util.multiply_color(options.smoke_color_1_inner, options.smoke_color_1_inner_strength)
                    }
                },
                {
                    count = 1,
                    render_layer = "smoke",
                    animation = {
                        filename = "__base__/graphics/entity/crude-oil/oil-smoke-outer.png",
                        frame_count = 47,
                        line_length = 16,
                        width = 90,
                        height = 188,
                        animation_speed = 0.5,
                        shift = util.by_pixel(33, -0 -152+global_shift),
                        scale = 1.2,
                        tint = util.multiply_color(options.smoke_color_2_outer, options.smoke_color_2_outer_strength)
                    }
                },
                {
                    count = 1,
                    render_layer = "smoke",
                    animation = {
                        filename = "__base__/graphics/entity/crude-oil/oil-smoke-inner.png",
                        frame_count = 47,
                        line_length = 16,
                        width = 40,
                        height = 84,
                        animation_speed = 0.5,
                        shift = util.by_pixel(35, -0 -78+global_shift),
                        scale = 1.2,
                        tint = util.multiply_color(options.smoke_color_2_inner, options.smoke_color_2_inner_strength)
                    }
                }
            },
            mining_visualisation_tint = options.smoke_color_1_inner,
            map_color = options.map_color
        },
        {
            type = "item",
            name = name,
            icon = "__erm_shared_economy__/graphics/geyser/"..type.."-icon.png",
            pictures =
            {
                { size = 64, filename = "__erm_shared_economy__/graphics/geyser/"..type.."-icon.png",   scale = 0.5 },
            },
            subgroup = "erm-geyser-processes",
            order = "x[geyser]-a["..options.name.."]",
            inventory_move_sound = item_sounds.resource_inventory_move,
            pick_sound = item_sounds.resource_inventory_pickup,
            drop_sound = item_sounds.resource_inventory_move,
            stack_size = 50,
            default_import_location = options.import_location,
            weight = 5*kg
        }
    })

    if options.has_starting_area_placement then
        resource_autoplace.initialize_patch_set(name, true)
    end
end

function Geyser.add_refinery_recipe(options)
    local name = options.name
    data.extend({
        {
            type = "recipe",
            name = name.."-refinery",
            icons = {
                {
                    icon = "__erm_shared_economy__/graphics/geyser/"..options.type.."-icon.png",
                    scale = 0.4
                },
                {
                    icon = "__base__/graphics/icons/arrows/down-arrow.png",
                    icon_size = 64,
                    scale = 0.5,
                    shift = {0, 18}
                },
            },
            category = "oil-processing",
            subgroup = "erm-geyser-processes",
            order = "a[geyser]-a["..name.."-refinery]",
            enabled = options.enabled,
            hide_from_player_crafting = false,
            auto_recycle = false,
            energy_required = options.energy_required,
            ingredients = options.ingredients,
            results = options.results
        },
    })
end

return Geyser
